const { sequelize } = require('./server/config/database');

async function updateQuantidadeToInteger() {
  try {
    console.log('üîÑ Atualizando campos de quantidade para INTEGER...');

    // Atualizar tabela materials
    await sequelize.query(`
      ALTER TABLE materials 
      MODIFY COLUMN quantidade INT NOT NULL DEFAULT 0,
      MODIFY COLUMN quantidade_minima INT NOT NULL DEFAULT 0
    `);
    console.log('‚úÖ Tabela materials atualizada');

    // Atualizar tabela requisitions
    await sequelize.query(`
      ALTER TABLE requisitions 
      MODIFY COLUMN quantidade INT NOT NULL
    `);
    console.log('‚úÖ Tabela requisitions atualizada');

    // Atualizar tabela movimentacoes (se existir)
    try {
      await sequelize.query(`
        ALTER TABLE movimentacoes 
        MODIFY COLUMN quantidade INT NOT NULL,
        MODIFY COLUMN quantidade_anterior INT NOT NULL,
        MODIFY COLUMN quantidade_nova INT NOT NULL
      `);
      console.log('‚úÖ Tabela movimentacoes atualizada');
    } catch (error) {
      console.log('‚ö†Ô∏è Tabela movimentacoes ainda n√£o existe, ser√° criada automaticamente');
    }

    // Converter valores existentes para inteiros
    await sequelize.query(`
      UPDATE materials 
      SET quantidade = CAST(quantidade AS UNSIGNED),
          quantidade_minima = CAST(quantidade_minima AS UNSIGNED)
    `);
    console.log('‚úÖ Valores convertidos para inteiros');

    await sequelize.query(`
      UPDATE requisitions 
      SET quantidade = CAST(quantidade AS UNSIGNED)
    `);
    console.log('‚úÖ Valores de requisi√ß√µes convertidos para inteiros');

    console.log('üéâ Atualiza√ß√£o conclu√≠da com sucesso!');
    console.log('üìä Agora as quantidades n√£o ter√£o mais casas decimais desnecess√°rias');

  } catch (error) {
    console.error('‚ùå Erro ao atualizar banco de dados:', error);
  } finally {
    await sequelize.close();
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  updateQuantidadeToInteger();
}

module.exports = updateQuantidadeToInteger; 